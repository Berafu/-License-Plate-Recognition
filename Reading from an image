import cv2
import imutils
import easyocr
import numpy as np
from tensorflow.keras.models import load_model
from matplotlib import pyplot as plt

model_path = '/content/drive/My Drive/license_plate_model.keras'plate_model = load_model(model_path)

plate_model.compile(optimizer='adam', loss='binary_crossentropy',metrics=['accuracy'])

img = cv2.imread('/content/drive/My Drive/image4.jpg')

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

blurred = cv2.GaussianBlur(gray, (5, 5), 0)
contrast_enhanced = cv2.equalizeHist(blurred)

_, binary = cv2.threshold(contrast_enhanced, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

edges = cv2.Canny(binary, threshold1=100, threshold2=200)

keypoints = cv2.findContours(edges, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(keypoints)
contours = sorted(contours, key=cv2.contourArea, reverse=True)[:10]

location = None
for contour in contours:
  approx = cv2.approxPolyDP(contour, 10, True)
  if len(approx) == 4:
    location = approx
    break

res = img.copy()

if location is None:
  print("No license plate detected.")
else:
  mask = np.zeros(gray.shape, np.uint8)
  cv2.drawContours(mask, [location], 0, 255, -1)
  masked_image = cv2.bitwise_and(img, img, mask=mask)
  (x, y) = np.where(mask == 255)
  (x1, y1) = (np.min(x), np.min(y))
  (x2, y2) = (np.max(x), np.max(y))
  cropped_image = gray[x1:x2+1, y1:y2+1]
  reader = easyocr.Reader(['en'])
  result = reader.readtext(cropped_image)
  if result:
    text = result[0][-2]
    font = cv2.FONT_HERSHEY_SIMPLEX
    cv2.putText(res, text=text, org=(location[0][0][0], location[1][0][1]+ 60), fontFace=font, fontScale=1,
    color=(0, 255, 0), thickness=2, lineType=cv2.LINE_AA)
    res = cv2.rectangle(res, tuple(location[0][0]), tuple(location[2][0]),(0, 255, 0), 3)
  else:
    print("No text detected.")

plt.figure(figsize=(8, 6))
plt.imshow(cv2.cvtColor(res, cv2.COLOR_BGR2RGB))
plt.title('Result')
plt.axis('off')
plt.show()
